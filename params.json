{"google":"UA-10465474-3","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Introduction to Server-Side Programming with PHP","tagline":"VCC DIG 1108 FALL 2012","body":"## Course Syllabus\r\n\r\n* Instructor: David Rogers (@al-the-x)\r\n* Phone: 407-582-2340 (Arts & Ent Dept)\r\n* Email: drogers28@mail.valenciacollege.edu\r\n* URL: https://vcc-dig1108-fall2012.github.com\r\n\r\n### Text and Required Supplies\r\n\r\n* [Head First PHP & MySQL](http://shop.oreilly.com/product/9780596006303.do?CMP=ILC-hf1st) ([site](http://www.headfirstlabs.com/books/hfphp/))\r\n  * Print ISBN13: 978-0-596-00630-3 / ISBN10: 0-596-00630-6\r\n  * Ebook ISBN13: 978-0-596-55644-0 / ISBN10: 0-596-55644-6\r\n* [Free Github Account](https://github.com/signup)\r\n* [Free Cloud9 IDE Account](https://c9.io/signup)\r\n\r\n## Course Description\r\n\r\nCovers basic programming knowledge applied to back-end web technology with a focus on the PHP programming language.\r\n\r\n## Course Objectives\r\n\r\nThis course will enable a student to read and write computer programs in the PHP server-side programming language, find and navigate reference material in print and on the internet, work together and individually to complete a test-driven development project, and to track his or her progress incrementally with the \"git\" source control system.\r\n\r\n## Core Competencies\r\n\r\nValencia faculty have defined four interrelated competencies (Think, Value, Communicate, ACT) that prepare students to succeed in the world community.  These competencies are outlined in the College Catalog.  In this course, through lecture and discussion, group work, and other learning activities, you will further \r\ndevelop your mastery of those competencies. \r\n\r\n## Attendance Policy\r\n\r\nPlease keep in mind that this is a once-a-week class period in which you're expected to learn a completely foreign language _and_ all the mental paradigms of basic computer science. Missing even a single class can put you significantly behind the rest of the class.\r\n\r\nAttendance will be taken promptly at the beginning of each class period, and any absence will be marked as a deduction of your **Participation** grade, as noted below under **Grading Policy**. The standard withdrawal window apply; see your term calendar. In the case of excessive absence due to unforeseeable circumstances, contact me immediately to register an _Incomplete_ grade so that you can attempt to complete the course work in a future term.\r\n\r\n## Exam and Grading Policy\r\n\r\n### Participation: 45 points\r\n\r\nThis class will heavily emphasize individual engagement and group participation. Your attendance to and attention in class will make or break your grade. You'll be scored in the following areas:\r\n\r\n* _Class Attendance_ -- Each missed class period will result in an 5 point reduction in grade; missing more than 2 class periods consecutively without notice will result in a full loss of points and an effective failure grade. If an unavoidable circumstance arises, contact me.\r\n* _Pairing Exercises_ -- You'll regularly be assigned in-class work with a partner chosen at random, and your ability to work with various partners will be graded objectively, counting positive progress in your favor.\r\n* _Dojo Exercises_ -- Towards the second half of the term, the class will regularly engage in Coding Dojo exercises, and your participation and engagement in these exercises will be graded objectively and subjectively based on the rules explained in class.\r\n\r\n### Assignments: 30 points\r\n\r\nEach class period will usually feature a couple of in-class pairing exercises, in which you'll be partnered with another student at random to complete a short assignment. Additionally, you'll regularly be assigned out-of-class exercises that should be completed individually and is due before midnight of the next class day. Although collaboration and communication with your fellow students is acceptable, sharing answers directly is strongly discouraged. Finally, certain assignments will be noted as individual-only assignments and should reflect a student's individual effort. If in doubt, ask for clarification.\r\n\r\n#### Programming Assignments\r\n\r\nThroughout the course, the students will be given various assignments that involve producing working programs. These assignments MUST be stored in the [git source control management tool](http://git-scm.com) and submitted for review via Github. More specific instructions for submission and guidelines may accompany each such assignment. These will be graded based on the following, whenever applicable:\r\n\r\n* _Coverage_ of test cases\r\n* _Compliance_ to coding standards\r\n* _Correctness_ of solution\r\n* _Complexity_ of solution\r\n\r\n### Final Project: 15 points\r\n\r\nIn the second half of the term, each student will be assigned a different programming project that should be completed outside of class and is due the day of the Final Exam. It will be graded as per **Programming Assignments** above and should include incremental commits into a source control repository under the student's Github account. While general collaboration and communication with other students is acceptable for this project, all code should be authored by the assigned student.\r\n\r\n### Final Exam: 10 points\r\n\r\nEach student will be given a programming project to work on within the allotted exam period, however successful completion of the project within that timeframe is not expected. It will be graded as per **Programming Assignments** above (with concessions for _Correctness_ since you likely won't finish). All code should be authored by the assigned student within the provided class period; collaboration or communication with other students is not permitted.\r\n\r\n### Overall Grading Scale\r\n\r\n* A: 90+ points\r\n* B: 80 - 90\r\n* C: 70 - 80\r\n* D: 60 - 70\r\n* F: 60- points\r\n\r\n### Make-Up Policy\r\n\r\nIf you cannot attend the Final Exam for unavoidable reasons, you may request an alternate exam date, which must correspond to another scheduled class time. If you cannot attend because of unforeseen, unavoidable reasons, you may contact me to request an _Incomplete_ for the class and take the exam in a subsequent term. If you fail to submit an assignment by the required due date, you will not receive credit for the assignment.\r\n\r\n## Computer & Equipment Use Policy\r\n\r\nUse of computers in the Business, IT, and Public Services classrooms at Valencia Community College is restricted to those activities designated by the instructor to enhance the class materials.  Any other use is strictly forbidden.  Inappropriate use includes, but is not limited to: \r\n\r\n* Use of computer to send E-mail or access Internet sites not specifically assigned in class. \r\n* Use of computer for job, internship, homework or other activities not assigned in class. \r\n* Modifying any hardware or software system configuration or setting. \r\n* Activities not in accordance with the Valencia Student Code of Conduct \r\n\r\nUse of computers in the Business Students open lab (Bldg. 2, Room 304) is limited to those activities involved with preparing homework or coursework in the IT or Business departments and is subject to the same restriction as listed above. \r\n\r\nComputer use is remotely monitored; any student using computers inappropriately may be subject to dismissal from class or banishment from the lab.  Subsequent offense may be sent to the campus administration for further disciplinary action.\r\n\r\n## Students with Disabilities\r\n\r\nStudents with disabilities who qualify for academic accommodations must provide a notification from the Office for Students with Disabilities (OSD) and discuss specific needs with the instructor, preferably during the first two weeks of class.  The Office for Students with Disabilities determines accommodations based on appropriate documentation of disabilities.  The East Campus Office is located in Building 5, \r\nRoom 216.\r\n\r\n## Course Schedule\r\n\r\n* **Week 1:** Introduction to the Class, Syllabus, and Text\r\n* **Weeks 2-6:** Primitives, Literals, Variables, Operators, Control Structures, Functions \r\n* **Weeks 7-8:** Basic Object-Oriented Programming\r\n* **Weeks 9:** Welcome to the Coding Dojo!\r\n* **Weeks 10-15:** Advanced Techniques, Coding Dojos\r\n* **Final Exam**\r\n"}